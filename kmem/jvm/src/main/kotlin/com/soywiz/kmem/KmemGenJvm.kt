// @WARNING: File AUTOGENERATED by `kmem/jvm/src/test/kotlin/Generator.kt` do not modify manually!
@file:Suppress("NOTHING_TO_INLINE", "EXTENSION_SHADOWED_BY_MEMBER", "RedundantUnitReturnType", "FunctionName")
package com.soywiz.kmem

import java.nio.*
import java.util.*

actual class MemBuffer(val buffer: ByteBuffer)
actual fun MemBufferAlloc(size: Int): MemBuffer = TODO()
actual fun MemBufferWrap(array: ByteArray): MemBuffer = TODO()
actual inline val MemBuffer.size: Int get() = buffer.capacity()

actual fun MemBuffer._sliceInt8Buffer(byteOffset: Int, size: Int): Int8Buffer = TODO()
actual fun MemBuffer._sliceInt16Buffer(byteOffset: Int, size: Int): Int16Buffer = TODO()
actual fun MemBuffer._sliceInt32Buffer(byteOffset: Int, size: Int): Int32Buffer = TODO()
actual fun MemBuffer._sliceFloat32Buffer(byteOffset: Int, size: Int): Float32Buffer = TODO()
actual fun MemBuffer._sliceFloat64Buffer(byteOffset: Int, size: Int): Float64Buffer = TODO()

actual class Int8Buffer(val mbuffer: MemBuffer, val jbuffer: ByteBuffer)
actual val Int8Buffer.buffer: MemBuffer get() = TODO()
actual val Int8Buffer.byteOffset: Int get() = TODO()
actual val Int8Buffer.size: Int get() = TODO()
actual operator fun Int8Buffer.get(index: Int): Byte = TODO()
actual operator fun Int8Buffer.set(index: Int, value: Byte): Unit = TODO()

actual class Int16Buffer(val mbuffer: MemBuffer, val jbuffer: ShortBuffer)
actual val Int16Buffer.buffer: MemBuffer get() = TODO()
actual val Int16Buffer.byteOffset: Int get() = TODO()
actual val Int16Buffer.size: Int get() = TODO()
actual operator fun Int16Buffer.get(index: Int): Short = TODO()
actual operator fun Int16Buffer.set(index: Int, value: Short): Unit = TODO()

actual class Int32Buffer(val mbuffer: MemBuffer, val jbuffer: IntBuffer)
actual val Int32Buffer.buffer: MemBuffer get() = TODO()
actual val Int32Buffer.byteOffset: Int get() = TODO()
actual val Int32Buffer.size: Int get() = TODO()
actual operator fun Int32Buffer.get(index: Int): Int = TODO()
actual operator fun Int32Buffer.set(index: Int, value: Int): Unit = TODO()

actual class Float32Buffer(val mbuffer: MemBuffer, val jbuffer: FloatBuffer)
actual val Float32Buffer.buffer: MemBuffer get() = TODO()
actual val Float32Buffer.byteOffset: Int get() = TODO()
actual val Float32Buffer.size: Int get() = TODO()
actual operator fun Float32Buffer.get(index: Int): Float = TODO()
actual operator fun Float32Buffer.set(index: Int, value: Float): Unit = TODO()

actual class Float64Buffer(val mbuffer: MemBuffer, val jbuffer: DoubleBuffer)
actual val Float64Buffer.buffer: MemBuffer get() = TODO()
actual val Float64Buffer.byteOffset: Int get() = TODO()
actual val Float64Buffer.size: Int get() = TODO()
actual operator fun Float64Buffer.get(index: Int): Double = TODO()
actual operator fun Float64Buffer.set(index: Int, value: Double): Unit = TODO()

actual fun arraycopy(src: ByteArray, srcPos: Int, dst: ByteArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: ShortArray, srcPos: Int, dst: ShortArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: IntArray, srcPos: Int, dst: IntArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: FloatArray, srcPos: Int, dst: FloatArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: DoubleArray, srcPos: Int, dst: DoubleArray, dstPos: Int, size: Int): Unit = TODO()

actual fun arraycopy(src: MemBuffer, srcPos: Int, dst: MemBuffer, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: ByteArray, srcPos: Int, dst: MemBuffer, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: MemBuffer, srcPos: Int, dst: ByteArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: ShortArray, srcPos: Int, dst: MemBuffer, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: MemBuffer, srcPos: Int, dst: ShortArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: IntArray, srcPos: Int, dst: MemBuffer, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: MemBuffer, srcPos: Int, dst: IntArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: FloatArray, srcPos: Int, dst: MemBuffer, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: MemBuffer, srcPos: Int, dst: FloatArray, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: DoubleArray, srcPos: Int, dst: MemBuffer, dstPos: Int, size: Int): Unit = TODO()
actual fun arraycopy(src: MemBuffer, srcPos: Int, dst: DoubleArray, dstPos: Int, size: Int): Unit = TODO()

@PublishedApi actual internal fun _fill(array: ByteArray, value: Byte, pos: Int, size: Int): Unit = Arrays.fill(array, pos, pos + size, value)
@PublishedApi actual internal fun _fill(array: ShortArray, value: Short, pos: Int, size: Int): Unit = Arrays.fill(array, pos, pos + size, value)
@PublishedApi actual internal fun _fill(array: IntArray, value: Int, pos: Int, size: Int): Unit = Arrays.fill(array, pos, pos + size, value)
@PublishedApi actual internal fun _fill(array: FloatArray, value: Float, pos: Int, size: Int): Unit = Arrays.fill(array, pos, pos + size, value)
@PublishedApi actual internal fun _fill(array: DoubleArray, value: Double, pos: Int, size: Int): Unit = Arrays.fill(array, pos, pos + size, value)
